from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from google_trans_new import google_translator
import vk_api
import random
import sys
import os
import requests
sys.path.append("./src")
from vkTools import send, getText, fromId, wallGet, modMessage
from faceSwap import faceChanger
from otherTools import changeTextByArina, estimate, wikiBot
from gpt3 import gpt3
from xlsxTools import getMessage, newCMD
from markov import Markov
from aboba import getYAML

from vk_api.utils import get_random_id

vk_session = vk_api.VkApi(
    token='–¢–û–ö–ï–ù')
longpoll = VkBotLongPoll(vk_session, '–ê–ô–î–ò')
vk = vk_session.get_api()
tools = vk_api.VkTools(vk_session)
translator = google_translator()
captcha = 0

def adminCMD(text, evnt):
    newCMD(text, evnt)

def staticCMD(text, idS, chat_id):
    answer = getMessage(text)
    print("–û—Ç–≤–µ—Ç: ", answer)
    if answer[0] != "None":
        if answer[2] != '':
            if answer[2] == idS:
                send(answer[0], answer[1], chat_id)
        else:
            if answer[3] == True:
                send(answer[0], answer[1], chat_id)
            elif random.randint(0, 100) > 80:
                send(answer[0], answer[1], chat_id)

def decodeFun(text, chat_id):
    file = open('dict/sortWords.txt', 'r')  
    lines = file.readlines()
    message = ''
    for i in range(len(text)):
        wordsLetter = [value for value in lines if value[0] == text[i].lower()]
        message += text[i] + ' - ' + wordsLetter[random.randint(0, len(wordsLetter)-1)]
    send(message,'',chat_id)
    
def moisha(text):
    text = modMessage(text)
    if ((text != '') and not ("http" in text) and (len(text) > 1)):
        file = open('dict/messages.txt', 'a')
        file.write(text+'\n')
        file.close()

def moishaMarkov(text, chat_id):
    message = markov(text)
    send(message,'',chat_id)

def agro(text, chat_id):
    if ("club203967942" in text):
        send('–ù–∏—Ö—É—è —Ç—ã —É–º–Ω—ã–π, –ø–æ—à—ë–ª –Ω–∞—Ö—É–π!', '', chat_id)
        return
    phrases = ['–ö–∞–∫ –≥–æ–≤–æ—Ä–∏–ª –º–æ–π –¥–µ–¥: "–õ—é–±–∏—à—å –∫–∞—Ç–∞—Ç—å—Å—è - –∫–∞—Ç–∏—Å—å –Ω–∞ —Ö—É–π '+text+'"',
            '–î–∞, —è –º–æ–≥—É –¥–æ–ø—É—Å–∫–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ. –ù–æ –∫–∞–∫–∏–µ –∂–µ –æ–Ω–∏ –ø–∏–∑–¥–∞—Ç—ã–µ, —á—Ç–æ —Ç–∞–∫ –∏ –µ–±—É—Ç —Ç–µ–±—è –≤ –≥–ª–∞–∑–∞, –∫–∞–∫ —Å—É—á–∫—É. '+text, 
            '–ù–æ–≥–∏ –µ—Å—Ç—å, '+text+'? –¢–æ–≥–¥–∞ —Å—ä–µ–±–∞–ª—Å—è –Ω–∞—Ö—É–π.','–ò–∑–≤–∏–Ω–∏, –Ω–æ –º–∞–º–∞ —É—á–∏–ª–∞ –º–µ–Ω—è –Ω–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å —Ç–∞–∫–∏–º –≥–æ–≤–Ω–æ–º, –∫–∞–∫ '+text+'.',
            text+', —Ç—ã –∫–∞–∫ –º—É—Ä–∞–≤–µ–π, –Ω–µ—Å—ë—à—å –≤—Å—è–∫—É—é —Ö—É–π–Ω—é.', 
            text+', —Ç—ã –≤—Å–µ–≥–¥–∞ —Ç–∞–∫ –≥–ª—É–ø –∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π?',
            '–Ø –≤–∏–¥–µ–ª –ª—é–¥–µ–π, –∫–∞–∫ '+text+', –Ω–æ —Ç–æ–≥–¥–∞ –º–Ω–µ –Ω–∞–¥–æ –±—ã–ª–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∑–∞ –±–∏–ª–µ—Ç –≤ —Ü–∏—Ä–∫.',
            text+', –∫—Ç–æ –ø–æ–¥–∂—ë–≥ –∑–∞–ø–∞–ª –Ω–∞ —Ç–≤–æ—ë–º —Ç–∞–º–ø–æ–Ω–µ?',
            text+', —Ç–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–∞–º–ø–æ–Ω–∞ –≤–æ —Ä—Ç—É, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –≤–µ—Å—Ç–∏ —Å–µ–±—è, –∫–∞–∫ –ø–∏–∑–¥–∞, —Ç–æ –≤—ã–≥–ª—è–¥–∏ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–µ.',
            text+', —à–æ–∫–∏—Ä—É–π –º–µ–Ω—è. –°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —É–º–Ω–æ–µ.',
            text+', –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Ç–∞–∫–∏–º –¥–µ–±–∏–ª–æ–º. –û–¥–Ω–∞–∫–æ —ç—Ç–æ —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.',
            '–ë–æ–≥ —Å–æ–∑–¥–∞–ª –≥–æ—Ä—ã, –ë–æ–≥ —Å–æ–∑–¥–∞–ª –¥–µ—Ä–µ–≤—å—è, –ë–æ–≥ —Å–æ–∑–¥–∞–ª '+text+', –Ω–æ –≤—Å–µ –º—ã —Å–æ–≤–µ—Ä—à–∞–µ–º –æ—à–∏–±–∫–∏.',
            text+', –∫–ª—É–± –º–∞–∑–æ—Ö–∏–∑–º–∞ –Ω–∞ –¥–≤–∞ —ç—Ç–∞–∂–∞ –Ω–∏–∂–µ...']
    send(random.choice(phrases),'',chat_id)


def textToEmoji(text, chat_id):
    headers = {
        'authority': 'textgenerator.ru',
        'sec-ch-ua': '" Not;A Brand";v="99", "Google Chrome";v="91", "Chromium";v="91"',
        'x-requested-with': 'XMLHttpRequest',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'accept': '*/*',
        'origin': 'https://textgenerator.ru',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        'referer': 'https://textgenerator.ru/font/emoji',
        'accept-language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        'cookie': '_ym_uid=1624568435313291772; _ym_d=1624568435; _ym_isad=1',
        'dnt': '1',
        'sec-gpc': '1',
    }

    data = {
      'text': text
    }

    response = requests.post('https://textgenerator.ru/font/emoji/ajax', headers=headers, data=data)
    send(response.text,'',chat_id)


for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        #print(event.message_id)
        evnt = str(event)
        
        #print(evnt)
        newMessage = getText(evnt)
        print("–°–∞–º–∞ –∫–æ–º–∞–Ω–¥–∞: ", newMessage)
        print(evnt)
        if "–í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—Ç—á—É:" in evnt:
            print("–ü–æ–ø–∞–ª–æ —Å—é–¥–∞")
            captcha.try_again(newMessage)
        idSender = fromId(evnt)
        newMessageLower = newMessage.lower()
        
        print("–ù–∏–∂–Ω—è—è –∫–æ–º–∞–Ω–¥–∞: ", newMessageLower)

        if idSender == "90662083":
            moisha(newMessageLower)
        if (newMessage.count(' ') >= 10) and (random.randint(0, 100) == 1):
            changeTextByArina(newMessage, event)
        if ("–±–æ—Ç, –æ—Ü–µ–Ω–∏" in newMessage): # –û—Ü–µ–Ω–∫–∞
            estimate(newMessage, event)
        elif newMessageLower[:5] == '/roll':
            if len(newMessageLower) == 5:
                send(str(random.randint(0,10)),'', event.chat_id)
            else:
                fd = newMessageLower[6:newMessageLower.find('-')]
                sd = newMessageLower[newMessageLower.find('-')+1:]
                if (fd.isdigit()) and (sd.isdigit()):
                    fd = int(fd)
                    sd = int(sd)
                    if (fd < sd):
                        send(str(random.randint(fd,sd)),'', event.chat_id)
                    else:
                        send('–•–æ—á–µ—à—å –Ω–∞–µ–±–∞—Ç—å –º–µ–Ω—è, –¥–µ—à—ë–≤–∫–∞?','',event.chat_id)
                else:
                    send('–•–æ—á–µ—à—å –Ω–∞–µ–±–∞—Ç—å –º–µ–Ω—è, –¥–µ—à—ë–≤–∫–∞?','',event.chat_id)
        elif (newMessageLower[:12] == "–º–æ–π—à–∞ –º–∞—Ä–∫–æ–≤"):
            n = newMessageLower[13:]
            if n.isdigit():
                n = int(n)
                if (n<1) or (n>9):
                    send('–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞, –∏–¥–∏ –Ω–∞—Ö—É–π, –¥–µ—à—ë–≤–∫–∞', '', event.chat_id)
                else:
                    moysha = Markov('dict', n)
                    answer = moysha.generate(n)
                    send(answer, '', event.chat_id)
            else:
                moysha = Markov('dict', 4)
                answer = moysha.generate(query=newMessageLower[13:])
                send('> ' + newMessageLower[13:].capitalize()+'\n> ' + answer, '', event.chat_id)
        elif (random.randint(0, 10) <= -3) and (newMessageLower[-1] == '?'):
            send('–ú–æ–π—à–∞ —É—Å–ª—ã—à–∞–ª –í–∞—à –≤–æ–ø—Ä–æ—Å... –ú–æ–π—à–∞ –¥—É–º–∞–µ—Ç...', '', event.chat_id)
            moysha = Markov('dict', 4)
            answer = moysha.generate(query=newMessageLower[:-1])
            send('> ' + newMessageLower.capitalize()+'\n> ' + answer, '', event.chat_id)
        elif (newMessageLower[:9] == "—Ä–∞—Å—à–∏—Ñ—Ä—É–π"): # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞
            print(event.chat_id)
            decodeFun(newMessageLower[10:], event.chat_id)
        elif (newMessageLower[:len("—Ç–µ–∫—Å—Ç –≤ —ç–º–æ–¥–∑–∏")] == "—Ç–µ–∫—Å—Ç –≤ —ç–º–æ–¥–∑–∏"):
            textToEmoji(newMessageLower[len("—Ç–µ–∫—Å—Ç –≤ —ç–º–æ–¥–∑–∏")+1:], event.chat_id)
        elif (newMessageLower[:14] == '–±–æ—Ç, –±—ã–∫–∞–Ω–∏ –Ω–∞'):
            agro(newMessageLower[15:], event.chat_id)
        elif (newMessageLower[:5] == '–∞–±–æ–±–∞'):
            try:
                text = getYAML(newMessageLower[8:], newMessageLower[6])
                send("üÖ∞üÖ±üÖæüÖ±üÖ∞: " + text,'', event.chat_id)
            except:
                send("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–ª—è –∞–±–æ–±—ã", '', event.chat_id)
        elif (newMessageLower[:4] == "–≥–ø—Ç3"): # GPT3
            gpt3(newMessage, event)
        elif (newMessageLower[:4] == "–≤–∏–∫–∏"): # Wiki
            wikiBot(newMessage[5:], event)
        elif (newMessageLower == "—Ç–∞–π–ª–µ—Ä, —Ü–∏—Ç–∞—Ç—É"): # –¢–∞–π–ª–µ—Ä
            #send("–ë–æ–ª—å—à–µ –ø–∞—Ä—Å–∏—Ç—å –≥—Ä—É–ø–ø—ã –Ω–µ–ª—å–∑—è, —Å–∫–∞–∂–∏—Ç–µ —Å–ø–∞—Å–∏–±–æ –æ–±–Ω–æ–≤–µ vk –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ–≤.",'', event.chat_id)
            captcha = wallGet("203127230", event)
        elif (newMessageLower == "—Ç–æ–º–∞—Å, —Ü–∏—Ç–∞—Ç—É"): # –¢–∞–π–ª–µ—Ä
            #send("–ë–æ–ª—å—à–µ –ø–∞—Ä—Å–∏—Ç—å –≥—Ä—É–ø–ø—ã –Ω–µ–ª—å–∑—è, —Å–∫–∞–∂–∏—Ç–µ —Å–ø–∞—Å–∏–±–æ –æ–±–Ω–æ–≤–µ vk –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ–≤.",'', event.chat_id)
            captcha = wallGet("194937912", event)
        elif (newMessageLower == "—á–µ —Ç–∞–º —É —Ñ–µ–º–æ–∫?"): # –¢–∞–π–ª–µ—Ä
            #send("–ë–æ–ª—å—à–µ –ø–∞—Ä—Å–∏—Ç—å –≥—Ä—É–ø–ø—ã –Ω–µ–ª—å–∑—è, —Å–∫–∞–∂–∏—Ç–µ —Å–ø–∞—Å–∏–±–æ –æ–±–Ω–æ–≤–µ vk –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ–≤.",'', event.chat_id)
            captcha = wallGet("72036785", event)
        elif newMessage == "–±–æ—Ç –¥–µ—Ä–∂–∏ –¥–≤–∞ —Ñ–æ—Ç–æ": # FaceSwap
            faceChanger(evnt, event)
        elif (idSender == "50990514") and (newMessage[:5] == "–∞–¥–º–∏–Ω"): # Admin
            adminCMD(newMessage[6:], event)
        else: # –¢–∞–±–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            staticCMD(newMessageLower, idSender, event.chat_id)


''' –≠—Ç–æ –Ω–∞ –±—É–¥—É—â–µ–µ, —á—Ç–æ–±—ã –æ–Ω –≤ –ª–∏—á–∫—É –æ—Ç–≤–µ—á–∞–ª
Lslongpoll = VkLongPoll(vk_session)
Lsvk = vk_session.get_api()
for event in Lslongpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
        vars1 = ['–ü—Ä–∏–≤–µ—Ç', '–ö—É', '–•–∞–π', '–•–µ–ª–ª–æ—É']
        if event.text in vars1:
            if event.from_user:
                Lsvk.messages.send(
                    user_id = event.user_id,
                    message = '–ü—Ä–∏–≤–µ—Ç)',
                    random_id = get_random_id()
                    )
        vars2 = ['–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞', '–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞']
        if event.text in vars2:
            if event.from_user:
                Lsvk.messages.send(
                    user_id = event.user_id,
                    random_id = get_random_id(),
                    keyboard = keyboard.get_keyboard(),
                    message = '–î–µ—Ä–∂–∏'
                    )
'''
